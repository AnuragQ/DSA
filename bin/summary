priority
1. current count - 193 
	done - 98
2. interview prep - ~600
3. leetcode - medium - 740  
4. gfg,codechef
5. leetcode (easy - 407h,hard - 303)


daily 5hr
weekend 10hr	
total - 45hr 
1. 2d-array
	1.1. MatrixMultiplication	done
	1.2. WaveTraversal		done
	1.3. SpiralDisplay		done
	1.4. ExitPoint			
	1.5. RotateBy90			done
	1.6. ShellRotate					Todo
	1.7. Diagonal Traversal		done
	1.8. SaddlePoint 		done
 	1.9. SearchIn2dArray		done

2. Recursion
	2.1. TowerOfHanoi		done
	2.2. MaxOfArray			done
	2.3. FirstIndex			done
	2.4. LastIndex			done
	2.5. AllIndices			done
	2.6. GetSubsequence		done
	2.8. GetKPC			done
	2.9. GetStairPaths		done
	2.10. GetMazePaths		done
	2.11. GetMazePathWithJumps	done
	2.12. PrintKPC			done
	2.13. PrintStairPaths		done
	2.14. PrintSubsequence		done
	2.15. PrintMazePathWithJumps	done
	2.16. PrintPermutations		done
	2.17. PrintEncoding		done
	2.18. Floodfill			done	
	2.19. TargetSum Subsets		done
	2.20. NQueens			done
	2.21. KnightsTour					Todo
	2.22. Sudoku
	2.23. MagnatePuzzle
	

3. DP (r-recursion, m-memoized, i-iterative) and Greedy

	3.1. Fibonacci-dp				  m
	3.2. Climb Stairs				    i
	3.3. Climb Stairs With Variable Jumps		  m i
	3.4. Climb Stairs With Minimum Moves		r m i
	3.5. Min Cost In Maze Traversal			r m 
	3.6. Goldmine					  m
	3.7. Target Sum Subsets - Dp			r m 
	3.8. Coin Change Combination			  m i 
	3.9. Coin Change Permutations			    i
	3.10. Zero One Knapsack				r m
	3.11. Unbounded Knapsack      			  m
	3.12. Count Binary Strings			    i
	3.13. Arrange Buildings     			    i
	3.14. Count Encodings  				  m
	3.15. Count A+b+c+ Subsequences			r
	3.16. Maximum Sum Non Adjacent Elements		r
	3.17. Paint House				  m
	3.18. Paint House - Many Colors			  m
	3.19. Paint Fence				r m
	3.20. Tiling With 2 * 1 Tiles			  m
	3.21. Tiling With M * 1 Tiles			  m
	3.22. Friends Pairing 				r m
	3.23. Partition Into Subsets			r
	3.24. BuyAndSellStocks OTA			    i
	3.25. BuyAndSellStocks ITA			r
	3.26. BuyAndSellStocksWithTransactionFee ITA	r
	3.27. BuyAndSellStocksWithCooldown -ITA			Todo
	3.28. BuyAndSellStocks Two TA				Todo
	3.29. BuyAndSellStocks K T				Todo
	3.30. Longest Increasing Subsequence		r m i
	3.31. Maximum Sum Increasing Subsequence	r
	3.32. Longest Bitonic Subsequence		r
	3.33. Maximum Non-overlapping Bridges			Todo
	3.34. Russian Doll Envelopes			    i
	3.35. Longest Common Subsequence		r
	3.36. Longest Palindromic Subsequences		r
	3.37. Count Palindromic Subsequences			Todo
	3.38. Count Palindromic Substrings			Todo
	3.39. Longest Palindromic Substring			Todo
	3.40. CrosswordPuzzleProblem


4. Stacks and Queues
	4.1. NGE				done
	4.2. StockSpan				done
	4.3. LargestAreaHistgram		done
	4.4. SlidingWindowMaximum		done
	4.5. SmallestNumberFollowingPattern	done
	4.6. CelebrityProblem			done
	4.7. MinStack				done
	4.8. MinStack_2					Todo
	4.9. TwoStack				done
	4.10. Kstack
	4.11. MergeOverlappingInterval
	4.12. PetrolPumpProblem

5. LinkedList
	5.1. ReverseDataIterative		done
	5.2. ReverseDataRecursive		done
	5.3. ReversePointerIterative		done
	5.4. ReversePointerRecursive		done
	5.5. KReverseMulti				Todo
	5.6. MidPoint				done
	5.7. KthFromLast			done
	5.8. MergeTwoSortedLL			done
	5.9. RemoveDuplicatesInSortedLL		done
	5.10. OddEvenLL				done
	5.11. IsPalindrome			done
	5.12. Fold					Todo
	5.13. Unfold					
	5.14. AddTwoLL					Todo
	5.15. IntersectionPoint			done
	5.17. CloneLLWithRandomPointer
	5.18. FloydCycle
	5.19. GetAddRemove			done

6. GenericTrees
	6.1. SizeSumMaxHeight			Done
	6.2. Traversals(pre-post-level--iterative-recursive) Todo
	6.3. RemoveLeaves			Done
	6.4. Linearize				Done
	6.5. Find				Done
	6.6. NodeToRootPath			Done
	6.7. LCA				done
	6.8. DistanceBetweenTwoNodes		done
	6.9. PredecessorAndSuccessor		done
	6.10. CeilAndFloor			done
	6.11. KthLargestElement			done
	6.12. NodeWithMaxSum			done
	6.13. Diameter				done

7. BinaryTree 
	7.1. SizeSumMaxHeight						
	7.2. Traversals(pre-post-in-level--iterative-recursive)	done
	7.3. NodeToRootPath
	7.4. PrintKLevelsDown				done
	7.5. PathToLeafFromRootInRange			Done
	7.6. TransFormToLeftCloneTreeAndReverse
	7.7. PrintSingleChildNodes			Done
	7.8. RemoveLeaves				Done
	7.9. PrintNodesAtKDitstance			done
	7.10. IsBalanced				done
	7.11. IsBST
	7.12. TreeFromInPre
	7.13. TreeFromInPost
	7.14. TreeFromPrePost(condition - tree is full BT)
	7.15. TreeFromInLevel
	7.16. MultiSolver
	7.17. LCA
	7.18. Diameter(normal + efficient) 
	7.19. LargestBst
	7.20. RootToLeafPathTargetSum
	7.21. MaxSumN2L
	7.22. MaxSumL2L
	7.23. MaxSumN2N
	7.24. TreeFromParentArray
	7.25. TreeFromPerfectArray(CompleteBinaryTreeFromGivenLevelOrder)
	7.26. TopView
	7.27. BottomView
	7.28. LeftView
	7.29. RightView
	7.30. BoundaryTraversal
	7.31. VerticalSum
	7.32. TreeToLL
	7.33. LLtoTree					ASK
	7.34. TreeToCLL
	7.35. CLLtoTree					ASK
	7.36. TiltBT
	7.37. CloneWithRandomPointer
.

8. BinarySearchTree and AVL
	8.1. GetAddRemove
	8.2. Find
	8.3. MinMax
	8.4. LCA
	8.5. RepalceBySumOfGV
	8.6. PrintInRange  

9. HashMap
	9.1. HashmapCreation
	9.2. HighestFrequencyChar
	9.3. GetCommonElementDistinct
	9.4. GetCommonElementAll
	9.5. LongestConsecutiveSequence

10. Heap
	10.1. Heap(implementation)
	10.2. KSmallestElement
	10.3. SortKsortedArray
	10.4. MergeKsortedLists
	10.5. Huffman Encoding
	10.6. MedianPriorityQueue
	10.7. Sort2Arrays
	10.8. HeapSort	

11. Trie
	11.1. Trie creation

12. Graphs
	12.1. Implementation
	12.2. HasPath
	12.3. PrintAllPaths
	12.4. ShortestPath
	12.5. LongestPath
	12.6. Ceil
	12.7. Floor
	12.8. BFSandDFS
	12.9. LevelOrder
	12.10. GetConnectedComponents
	12.11. IsConnected
	12.12. IsAcyclic
	12.13. IsBipartite
	12.14. CountIslands
	12.15. Djikstra
	12.16. Prims
	12.17. KnightsTour
	12.18. Astronauts
	12.19. Diameter
	12.20. HamiltonianCnP
13. Math

14. Strings









